<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ch.erard22.quarkus</groupId>
  <artifactId>kafka-health-test</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <properties>
    <surefire-plugin.version>2.22.1</surefire-plugin.version>
    <maven.compiler.target>11</maven.compiler.target>
    <quarkus.platform.version>1.10.3.Final</quarkus.platform.version>
    <maven.compiler.source>11</maven.compiler.source>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <quarkus.platform.artifact-id>quarkus-universe-bom</quarkus.platform.artifact-id>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <quarkus-plugin.version>1.10.3.Final</quarkus-plugin.version>
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>

    <kafka.port>9092</kafka.port>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-reactive-messaging-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus-plugin.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.34.1</version>
        <configuration>
          <images>
            <image>
              <alias>zookeeper</alias>
              <name>confluentinc/cp-zookeeper</name>
              <run>
                <env>
                  <ZOOKEEPER_CLIENT_PORT>2181</ZOOKEEPER_CLIENT_PORT>
                </env>
                <ports>
                  <port>2181:2181</port>
                </ports>
                <log>
                  <date>none</date>
                </log>
              </run>
            </image>
            <image>
              <alias>kafka</alias>
              <name>confluentinc/cp-kafka</name>
              <run>
                <hostname>kafka</hostname>
                <env>
                  <KAFKA_ZOOKEEPER_CONNECT>zookeeper:2181</KAFKA_ZOOKEEPER_CONNECT>
                  <KAFKA_LISTENERS>INTERNAL://kafka:9094,OUTSIDE://kafka:9092</KAFKA_LISTENERS>
                  <KAFKA_ADVERTISED_LISTENERS>INTERNAL://kafka:9094,OUTSIDE://localhost:${kafka.port}</KAFKA_ADVERTISED_LISTENERS>
                  <KAFKA_LISTENER_SECURITY_PROTOCOL_MAP>INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT</KAFKA_LISTENER_SECURITY_PROTOCOL_MAP>
                  <KAFKA_INTER_BROKER_LISTENER_NAME>INTERNAL</KAFKA_INTER_BROKER_LISTENER_NAME>
                  <KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE>false</KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE>
                  <KAFKA_NUM_PARTITIONS>3</KAFKA_NUM_PARTITIONS>
                  <KAFKA_COMPRESSION_TYPE>gzip</KAFKA_COMPRESSION_TYPE>
                  <KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR>1</KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR>
                  <KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR>1</KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR>
                  <KAFKA_TRANSACTION_STATE_LOG_MIN_ISR>1</KAFKA_TRANSACTION_STATE_LOG_MIN_ISR>
                </env>
                <ports>
                  <port>${kafka.port}:9092</port>
                </ports>
                <links>
                  <link>zookeeper:zookeeper</link>
                </links>
                <dependsOn>
                  <container>zookeeper</container>
                </dependsOn>
                <log>
                  <date>none</date>
                </log>
              </run>
            </image>
            <image>
              <alias>akhq</alias>
              <name>tchiotludo/akhq</name>
              <run>
                <ports>
                  <port>7080:8080</port>
                </ports>
                <volumes>
                  <bind>
                    <volume>src/main/docker/akhq/application.yml:/app/application.yml</volume>
                  </bind>
                </volumes>
                <log>
                  <date>none</date>
                </log>
                <links>
                  <link>kafka:kafka</link>
                </links>
                <dependsOn>
                  <container>kafka</container>
                </dependsOn>
              </run>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>build-start-docker</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>build</goal>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-docker-1</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
              <goal>remove</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-docker-2</id>
            <phase>verify</phase>
            <goals>
              <goal>stop</goal>
              <goal>remove</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemPropertyVariables>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    <maven.home>${maven.home}</maven.home>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
  </profiles>
</project>
